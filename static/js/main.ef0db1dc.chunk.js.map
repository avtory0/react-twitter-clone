{"version":3,"sources":["Components/App-header/App-header.js","Components/Search-panel/Search-panel.js","Components/Post-status-filter/Post-status-filter.js","Components/Post-list-item/Post-list-item.js","Components/Post-list/Post-list.js","Components/Post-add-form/Post-add-form.js","Components/App/App.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","activeClass","onClick","PostListItem","onDelete","onToggleImportant","onToggleLike","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","porps","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","body","newItem","importantItem","likedItem","length","indexOf","visibleItem","filterPost","searchPost","post","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef0db1dc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./app-header.css\"\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Poibms</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e){\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport \"./post-status-filter.css\"\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({name,label}) => {\r\n            const {filter, onFilterSelect} = this.props\r\n            const active = filter === name;\r\n            const activeClass = active ? ' btn-info' : ' btn-outline-secondary'\r\n            return (\r\n                <button \r\n                    key={name}\r\n                    type=\"button\" \r\n                    className={`btn ${activeClass}`}\r\n                    onClick={() => onFilterSelect(name)}>\r\n                {label}</button>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\n\r\nimport \"./post-list-item.css\"\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLike, important, like} = this.props;\r\n        \r\n\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        \r\n        if(important) {\r\n            classNames += ' important';\r\n        }\r\n        \r\n        if(like) {\r\n            classNames += ' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span className=\"app-list-item-label\"\r\n                onClick={onToggleLike}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button type=\"button\" className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./post-list.css\"\r\nimport PostListItem from \"../Post-list-item/Post-list-item\";\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLike}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        if(typeof item === 'object') {\r\n            const {id, ...itemProps} = item\r\n            return(\r\n                <li key={id} className=\"list-group-item\">\r\n                    {/* <PostListItem \r\n                        label={item.label}\r\n                        important={item.important}/> */}\r\n\r\n                    <PostListItem {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLike={() => onToggleLike(id)}/>\r\n                </li>\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React, {Component} from \"react\";\r\n\r\nimport \"./post-add-form.css\"\r\n\r\nexport default class PostAddForm extends Component{\r\n    constructor(porps) {\r\n        super(porps);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    className=\"form-control new-post-label\" \r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    onChange ={this.onValueChange}\r\n                    value={this.state.text}/>\r\n    \r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from \"../App-header/App-header\";\r\nimport SearchPanel from \"../Search-panel/Search-panel\";\r\nimport PostStatusFilter from \"../Post-status-filter/Post-status-filter\";\r\nimport PostList from \"../Post-list/Post-list\";\r\nimport PostAddForm from \"../Post-add-form/Post-add-form\";\r\n\r\nimport \"./app.css\"\r\n\r\n\r\n\r\n\r\nexport default class App extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label:'going to learn React', important:true, like: false, id:'sgf'},\r\n                {label:'That is so good', important:false, like: false, id:'sgsda'},\r\n                {label:'I need a break...', important:false, like: false, id:'ireq'},\r\n                {label:'chill', important:false, like: false, id:'fsdfs'},\r\n            ],\r\n            term : '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLike = this.onToggleLike.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.maxId = 4;\r\n    }\r\n    \r\n    deleteItem(id) {\r\n        this.setState(({data}) => ({\r\n            data : data.filter(item => item.id !== id)\r\n        }));\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem ={\r\n            label:body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newData = [...data, newItem];\r\n            return {\r\n                data: newData\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            return {\r\n                data: data.map((item) => {\r\n                    const importantItem = {...item}\r\n                    if (importantItem.id === id) {\r\n                        importantItem.important = !importantItem.important;\r\n                    }\r\n    \r\n                    return importantItem;\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    onToggleLike(id) {\r\n       this.setState(({data}) => {\r\n            return {\r\n                data: data.map(item => {\r\n                    const likedItem = {...item}          \r\n                    if (likedItem.id === id) {\r\n                        likedItem.like = !likedItem.like;\r\n                    }\r\n                    return likedItem;\r\n                })\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    searchPost(item, term) {\r\n        if(term.length === 0 ) {\r\n            return item\r\n        }\r\n\r\n        return item.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost(item, filter) {\r\n        if(filter === 'like') {\r\n            return item.filter(item => item.like)\r\n        } else {\r\n            return item\r\n        }\r\n\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term})\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visibleItem = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <div className =\"app\">\r\n                <AppHeader \r\n                    liked={liked}\r\n                    allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch = {this.onUpdateSearch}/>\r\n                    <PostStatusFilter \r\n                        filter={filter} \r\n                        onFilterSelect = {this.onFilterSelect}/>\r\n                </div>\r\n                <PostList posts={visibleItem}\r\n                    post = {visibleItem}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLike={this.onToggleLike}\r\n                />\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n\n\n\n);\n\n \n"],"sourceRoot":""}